# .github/workflows/reusable-ci-checks.yml
# co-author : Gemini 2.5 Pro Preview

name: Reusable CI Checks

# This trigger makes the workflow callable by other workflows.
on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: true
        type: string
      os:
        description: 'Operating system to run on'
        required: true
        type: string
        default: 'ubuntu-latest'
      COFFEE_MAKER_RUN_CI_TESTS_VALUE:
        description: 'Value for COFFEE_MAKER_RUN_CI_TESTS env var (e.g., "True" or "False")'
        required: false
        type: string
        default: "True"

jobs:
  perform-checks:
    name: CI Checks on Python ${{ inputs.python-version }} OS ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        id: poetry-cache
        with:
          path: .venv
          key: ${{ inputs.os }}-poetry-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ inputs.os }}-poetry-${{ inputs.python-version }}-

      - name: Install dependencies (if cache miss)
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --with dev --no-root

      - name: Install project and all dependencies
        run: poetry install --no-interaction --with dev

      - name: Run tests/ci_tests with Coverage
        env:
          COFFEE_MAKER_RUN_CI_TESTS: ${{ inputs.COFFEE_MAKER_RUN_CI_TESTS_VALUE }}
        run: |
          poetry run pytest tests/ci_tests/ -v --cov=coffee_maker --cov-report=term
