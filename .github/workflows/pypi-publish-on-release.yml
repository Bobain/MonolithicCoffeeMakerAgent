# .github/workflows/pypi-publish-on-release.yml
# co-author : Gemini 2.5 Pro Preview

name: Upload Python Package to PyPI (Poetry)

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-package:
    name: Build Python distribution with Poetry
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12" # Manual sync: Ensure this base matches pyproject.toml

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Verify version consistency
        run: |
          # Get version from pyproject.toml using Poetry
          PYPROJECT_VERSION=$(poetry version --short)
          echo "Version in pyproject.toml: $PYPROJECT_VERSION"

          # Get version from GitHub tag (remove 'v' prefix if present)
          TAG_NAME="${{ github.event.release.tag_name }}"
          TAG_VERSION="${TAG_NAME#v}" # Removes 'v' prefix if it exists
          echo "Version from GitHub tag: $TAG_VERSION (original tag: $TAG_NAME)"

          if [ "$PYPROJECT_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Version in pyproject.toml ('$PYPROJECT_VERSION') does not match tag version ('$TAG_VERSION')!"
            exit 1
          fi
          echo "Versions successfully verified."

      - name: Build release distributions using Poetry
        run: poetry build

      - name: Upload distributions as artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-dists
          path: dist/

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    runs-on: ubuntu-latest
    needs:
      - build-package
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/coffee-maker/${{ github.event.release.tag_name }}

    steps:
      - name: Retrieve release distributions from artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # No 'with: repository-url:' needed for real PyPI
