# ============================================================================
# Coffee Maker Agent - Environment Variables Template
# ============================================================================
#
# ⚠️ SECURITY WARNING: NEVER COMMIT THE ACTUAL .env FILE TO GIT
#
# This is a TEMPLATE (.env.example) - safe to commit to git.
# Your actual .env file contains real API keys and is in .gitignore.
#
# INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Replace all placeholder values with your actual API keys
# 3. The .env file is already in .gitignore - DO NOT commit it
#
# ============================================================================

# Project Configuration
export COFFEE_MAKER_RUN_CI_TESTS="True"
export COFFEE_MAKER_MAX_CONCURRENCY="1"
export GITHUB_REPOSITORY="YourUsername/YourRepository"

# LangFuse (Analytics & Observability)
# Get keys from: https://cloud.langfuse.com
export LANGFUSE_SECRET_KEY="sk-lf-your-secret-key-here"
export LANGFUSE_PUBLIC_KEY="pk-lf-your-public-key-here"
export LANGFUSE_HOST="https://cloud.langfuse.com"

# Anthropic Claude API (REQUIRED for project-manager chat)
# Get key from: https://console.anthropic.com/
export ANTHROPIC_API_KEY="sk-ant-api03-your-key-here"

# OpenAI API (Optional - for multi-model support)
# Get key from: https://platform.openai.com/api-keys
export OPENAI_API_KEY="sk-proj-your-key-here"

# Google Gemini API (Optional - for multi-model support)
# Get key from: https://makersuite.google.com/app/apikey
export GEMINI_API_KEY="your-gemini-key-here"
export GOOGLE_API_KEY="your-google-api-key-here"

# GitHub Token (Optional - for automated PR creation)
# Get token from: https://github.com/settings/tokens
# Scopes needed: repo (full control)
export GITHUB_TOKEN="ghp_your-github-token-here"

# Hugging Face (Optional - for model downloads)
# Get token from: https://huggingface.co/settings/tokens
export HUGGING_FACE_HUB_TOKEN="hf_your-token-here"

# Gradio (Optional - for UI components)
# export GRADIO_MCP_SERVER=True

# ACE Framework (Agentic Context Engineering)
# Enables continuous agent improvement through execution observation and playbook curation
export ACE_ENABLED="false"  # Set to true to enable ACE framework
export ACE_AUTO_REFLECT="false"  # Automatically run reflector after executions
export ACE_AUTO_CURATE="false"  # Automatically run curator after reflection
export ACE_TRACE_DIR="docs/generator/traces"  # Directory for execution traces
export ACE_DELTA_DIR="docs/reflector/deltas"  # Directory for delta items
export ACE_PLAYBOOK_DIR="docs/curator/playbooks"  # Directory for playbooks
export ACE_SIMILARITY_THRESHOLD="0.85"  # Semantic similarity threshold (0.0-1.0)
export ACE_PRUNING_RATE="0.10"  # Percentage of bullets to prune (0.0-1.0)
export ACE_MIN_HELPFUL_COUNT="2"  # Minimum helpful count to avoid pruning
export ACE_MAX_BULLETS="150"  # Maximum playbook size
export ACE_REFLECT_BATCH_SIZE="5"  # Number of traces to process per batch
export ACE_EMBEDDING_MODEL="text-embedding-ada-002"  # OpenAI embedding model

# ============================================================================
# SECURITY BEST PRACTICES:
# ============================================================================
#
# ✅ DO:
# - Keep your .env file private and local
# - Use this .env.example as a template
# - Rotate API keys periodically (every 90 days)
# - Use separate keys for development and production
# - Store keys in a password manager
#
# ❌ DON'T:
# - Commit .env to git (it's already in .gitignore)
# - Share API keys in chat, email, or screenshots
# - Use production keys in development
# - Hard-code keys in source code
# - Copy .env to public locations
#
# If you accidentally expose a key:
# 1. Immediately revoke it in the provider's console
# 2. Remove from git history: git rm --cached .env
# 3. Generate a new key
# 4. Update your local .env file
# 5. Check git history: git log --all -- .env
#
# ============================================================================
